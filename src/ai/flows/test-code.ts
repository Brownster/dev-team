'use server';
/**
 * @fileOverview Creates and runs basic tests for generated components.
 *
 * - testCode - A function that handles the test creation and execution process.
 * - TestCodeInput - The input type for the testCode function.
 * - TestCodeOutput - The return type for the testCode function.
 */

import {ai} from '@/ai/ai-instance';
import {z} from 'genkit';
import { TestCodeInputSchema, TestCodeOutputSchema, TestCodeInput, TestCodeOutput } from './schemas';

const testCodePrompt = ai.definePrompt({
  name: 'testCodePrompt',
  input: {
    schema: TestCodeInputSchema,
  },
  output: {
    schema: TestCodeOutputSchema,
  },
  prompt: `You are an AI Tester agent responsible for creating and running tests for React components.

  Given the following component code:
  \`\`\`jsx
  {{{code}}}
  \`\`\`

  And the component name: {{{componentName}}}

  1.  Create a comprehensive set of tests using Jest and React Testing Library to ensure the component functions correctly. Consider various scenarios, including rendering, user interactions, and edge cases.
  2.  Write the tests to standard output in a dedicated "tests" field using standard Typescript syntax.
  3.  Execute the tests and capture the results, writing the results to standard output in a dedicated "results" field.
  `,
});

export const testCode = ai.defineFlow< // Directly export the result of ai.defineFlow
  typeof TestCodeInputSchema,
  typeof TestCodeOutputSchema
>(
  {
    name: 'testCodeFlow',
    inputSchema: TestCodeInputSchema,
    outputSchema: TestCodeOutputSchema,
  },
  async input => {
    try {
      const {output} = await testCodePrompt(input);
      if (!output) {
        throw new Error('No output generated by the AI prompt for test code generation.');
      }
      return output;
    } catch (error) {
      console.error('Error in testCodeFlow:', error);
      throw new Error(`Failed to generate or run tests: ${error instanceof Error ? error.message : String(error)}`);
    }
  }
);
